name: Build ECR

on:
  workflow_dispatch:

env: 
  ECR_REPOSITORY: "dpla-bws"

jobs:
  ecr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64,arm

      - name: Use Node.js ${{ steps.nvm.outputs.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      
      - name: Install npm 
        run: npm install 
        
      - name: Install Yarn
        run: npm install -g yarn

      - name: Set AWS credentials
        if: ${{ !env.ACT }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1    

      - name: Login to Amazon ECR
        if: ${{ !env.ACT }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

        # Get branch names for ECR tagging 
      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      # Push to ECR
      - name: Build, tag, and push image to Amazon ECR
        if: ${{ !env.ACT }}
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker buildx build \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          --platform linux/amd64,linux/arm64 . \
          --push